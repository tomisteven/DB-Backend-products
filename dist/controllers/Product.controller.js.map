{"version":3,"sources":["../../src/controllers/Product.controller.js"],"names":["createProduct","req","res","body","name","description","price","newProduct","Product","console","log","files","image","tempFilePath","result","public_id","secure_url","fs","unlink","save","productSaved","redirect","getProducts","find","product","json","getProduct","id","params","findById","deleteProduct","remove","message","editProduct"],"mappings":"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","sourcesContent":["//importamos base de datos\r\nimport  Product  from '../models/Product.js';\r\n\r\nimport {uploadImage, deleteImagen} from '../cloudinary.js';\r\nimport fs from 'fs-extra'\r\n\r\n \r\nconst createProduct = async (req, res) => {\r\n\r\n    try {\r\n\r\n    const { \r\n        name,\r\n        description,\r\n        price\r\n     } = req.body;\r\n     const newProduct = new Product({  name, description, price });\r\n\r\n     //ver objeto con null y undefined\r\n     console.log(req.files);\r\n     \r\n    if (req.files?.image) {\r\n        const result = await uploadImage(req.files.image.tempFilePath);\r\n        newProduct.image = {\r\n          public_id: result.public_id,\r\n          secure_url: result.secure_url\r\n        }\r\n        await fs.unlink(req.files.image.tempFilePath)\r\n      } \r\n\r\n\r\n     const productSaved = await newProduct.save(); \r\n\r\n     \r\n     //ir a pagina de productos\r\n     res.redirect('http://localhost:3000');\r\n     \r\n\r\n\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n\r\n\r\nconst getProducts = async (req, res) => {\r\ntry {\r\n    const product = await Product.find();\r\n    res.json(product);\r\n    \r\n} catch (error) {\r\n    console.log(error);\r\n}\r\n}\r\n\r\nconst getProduct = async (req, res) => {\r\n    try {\r\n        const { id } = req.params;\r\n    const product = await Product.findById(id);\r\n    res.json(product);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst deleteProduct = async (req, res) => {\r\n    try {\r\n\r\n        const { id } = req.params;\r\n        const product = await Product.findById(id);\r\n        //await deleteImagen(product.image.public_id);\r\n        await product.remove();\r\n        res.json({ message: 'product deleted' });\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n        \r\n    }\r\n\r\n\r\n}\r\n\r\nconst editProduct = async (req, res) => {\r\n    try {\r\n        const { id } = req.params;\r\n        const {name, description, price} = req.body;\r\n\r\n        const product = await Product.findById(id);\r\n        product.name = name;\r\n        product.description = description;\r\n        product.price = price;\r\n        await product.save();\r\n        \r\n        res.json({ message: 'product Saved' }); \r\n    } catch (error) {\r\n\r\n        console.log(error);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    \r\n    \r\n}\r\n\r\n\r\n\r\nexport {\r\n    createProduct,\r\n    getProducts,\r\n    deleteProduct,\r\n    editProduct,\r\n    getProduct\r\n}"],"file":"Product.controller.js"}